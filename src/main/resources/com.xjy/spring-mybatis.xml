<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd">

    <context:component-scan base-package="com.xjy.service"/>

    <context:property-placeholder location="classpath:application.properties" />

	<bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.pool.initialSize}" />
		<property name="maxTotal" value="${jdbc.pool.maxTotal}" />
		<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
		<property name="minIdle" value="${jdbc.pool.minIdle}" />
        <property name="maxWaitMillis" value="${jdbc.pool.maxWaitMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}" />
        <property name="testOnBorrow" value="${jdbc.pool.testOnBorrow}" />
        <property name="testWhileIdle" value="${jdbc.pool.testWhileIdle}" />
        <property name="validationQuery" value="${jdbc.pool.validationQuery}" />
        <property name="removeAbandonedOnBorrow" value="${jdbc.pool.removeAbandonedOnBorrow}" />
        <property name="removeAbandonedOnMaintenance" value="${jdbc.pool.removeAbandonedOnMaintenance}" />
        <property name="removeAbandonedTimeout" value="${jdbc.pool.removeAbandonedTimeout}" />
        <property name="logAbandoned" value="${jdbc.pool.logAbandoned}" />
	</bean>

    <tx:annotation-driven/>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:com.xjy/mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.xjy.entity"/>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="com.xjy.persistence" />
	</bean>

    <!-- 支持异步方法执行 -->
    <!--<task:annotation-driven executor="myExecutor"/>
    <task:executor id="myExecutor" pool-size="5-50" queue-capacity="100" rejection-policy="CALLER_RUNS" keep-alive="300" />-->

</beans>


